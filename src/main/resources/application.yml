server:
  port: 8090

spring:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 50MB
  main:
    allow-bean-definition-overriding: true
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
    open-in-view: false
    naming:
      physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: [profile, email]
            redirect-uri: "${REACT_APP_SPRING_API_BASE:http://localhost:8090}/login/oauth2/code/{registrationId}"
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "${REACT_APP_SPRING_API_BASE:http://localhost:8090}/login/oauth2/code/{registrationId}"
            scope: [account_email, profile_nickname, profile_image]
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-name: NAVER
            authorization-grant-type: authorization_code
            redirect-uri: "${REACT_APP_SPRING_API_BASE:http://localhost:8090}/login/oauth2/code/{registrationId}"
            scope: [name, email, nickname]
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

mybatis:
  config-location: classpath:mybatis/config/mybatis-config.xml
  mapper-locations: classpath:mybatis/mappers/**/*.xml
  type-aliases-package: com.petmate.dto

jwt:
  secret: ${JWT_SECRET}
  issuer: ${JWT_ISSUER}
  expiration: ${JWT_EXPIRATION}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION}

logging:
  level:
    com.petmate: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    com.petmate.security: INFO
    org.springframework.security: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/petmate.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 30

app:
  upload:
    dir: ${UPLOAD_ROOT_DIR:C:/petmate}
  public-img-url: "${REACT_APP_SPRING_API_BASE:http://localhost:8090}/img/"
  front-base-url: "${REACT_APP_FRONT_BASE_URL:http://localhost:3000}"
  encryption:
    secret-key: PetMateSecretKey123456789012
  nts:
    service-key: e6szMk7BwlyW91nmIcFPASpeypEm9M%2FZ50I99%2Ff9%2FPQLgbrANut%2BSa9oMD%2Fx9j1V5lS38o%2FrWlHp%2BAq1%2BmoUVQ%3D%3D
  session:
    inactive-timeout-minutes: 30  # 30분 비활성 시 자동 로그아웃

aws:
  s3:
    bucket: ${AWS_S3_BUCKET}
    access-key: ${AWS_S3_ACCESS_KEY}
    secret-key: ${AWS_S3_SECRET_KEY}
    region: ${AWS_S3_REGION}
